// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int @default(autoincrement()) @id
  email    String  @unique
  name     String
  password String
  imgUrl   String @default("default.png")
  groups   UserOnGroup[]
}

model Group {
  id     Int @default(autoincrement()) @id
  title  String @unique
  imgUrl String @default("default.png")
  slug   String @unique
  users  UserOnGroup[]
  tables Table[]
}

model UserOnGroup {
  group    Group @relation(fields: [groupId], references: [id])
  groupId  Int
  user     User @relation(fields: [userId], references: [id])
  userId   Int
  userRole userRole @default(User)
  @@id([userId, groupId])
}

enum userRole {
  User
  Moderator
  Admin
  Applicant
}

model Table {
  id      Int @default(autoincrement()) @id
  title   String
  imgUrl  String @default("default.png")
  group   Group @relation(fields: [groupId], references: [id])
  groupId Int
  tasks   Task[]
}

model Task {
  id          Int @default(autoincrement()) @id
  title       String
  tags        String
  description String
  status      taskStatus @default(Waiting)
  table       Table @relation(fields: [tableId], references: [id])
  tableId     Int 
}

enum taskStatus {
  Waiting
  InProccess
  Ready
}